// generated with geninttest by kimio kurmaitsu

function succ(n : int) : int {
	return n+1;
}

function minus(n : int) : int {
	return -n;
}
    
export function main() {
  var plus2 : int = 2;
  var minus2 : int = -2;
  assert((2 - 2 / 2) == 1);
  assert((2 - 2 / plus2) == 1);
  assert((2 - 2 / succ(1)) == 1);
  assert((2 - 2 / -minus2) == 1);
  assert((2 - 2 / -minus(2)) == 1);
  assert((2 - 2 / ~(-3)) == 1);
  assert((2 - 2 / (5-3)) == 1);
  assert((2 - plus2 / 2) == 1);
  assert((2 - plus2 / plus2) == 1);
  assert((2 - plus2 / succ(1)) == 1);
  assert((2 - plus2 / -minus2) == 1);
  assert((2 - plus2 / -minus(2)) == 1);
  assert((2 - plus2 / ~(-3)) == 1);
  assert((2 - plus2 / (5-3)) == 1);
  assert((2 - succ(1) / 2) == 1);
  assert((2 - succ(1) / plus2) == 1);
  assert((2 - succ(1) / succ(1)) == 1);
  assert((2 - succ(1) / -minus2) == 1);
  assert((2 - succ(1) / -minus(2)) == 1);
  assert((2 - succ(1) / ~(-3)) == 1);
  assert((2 - succ(1) / (5-3)) == 1);
  assert((2 - -minus2 / 2) == 1);
  assert((2 - -minus2 / plus2) == 1);
  assert((2 - -minus2 / succ(1)) == 1);
  assert((2 - -minus2 / -minus2) == 1);
  assert((2 - -minus2 / -minus(2)) == 1);
  assert((2 - -minus2 / ~(-3)) == 1);
  assert((2 - -minus2 / (5-3)) == 1);
  assert((2 - -minus(2) / 2) == 1);
  assert((2 - -minus(2) / plus2) == 1);
  assert((2 - -minus(2) / succ(1)) == 1);
  assert((2 - -minus(2) / -minus2) == 1);
  assert((2 - -minus(2) / -minus(2)) == 1);
  assert((2 - -minus(2) / ~(-3)) == 1);
  assert((2 - -minus(2) / (5-3)) == 1);
  assert((2 - ~(-3) / 2) == 1);
  assert((2 - ~(-3) / plus2) == 1);
  assert((2 - ~(-3) / succ(1)) == 1);
  assert((2 - ~(-3) / -minus2) == 1);
  assert((2 - ~(-3) / -minus(2)) == 1);
  assert((2 - ~(-3) / ~(-3)) == 1);
  assert((2 - ~(-3) / (5-3)) == 1);
  assert((2 - (5-3) / 2) == 1);
  assert((2 - (5-3) / plus2) == 1);
  assert((2 - (5-3) / succ(1)) == 1);
  assert((2 - (5-3) / -minus2) == 1);
  assert((2 - (5-3) / -minus(2)) == 1);
  assert((2 - (5-3) / ~(-3)) == 1);
  assert((2 - (5-3) / (5-3)) == 1);
  assert((plus2 - 2 / 2) == 1);
  assert((plus2 - 2 / plus2) == 1);
  assert((plus2 - 2 / succ(1)) == 1);
  assert((plus2 - 2 / -minus2) == 1);
  assert((plus2 - 2 / -minus(2)) == 1);
  assert((plus2 - 2 / ~(-3)) == 1);
  assert((plus2 - 2 / (5-3)) == 1);
  assert((plus2 - plus2 / 2) == 1);
  assert((plus2 - plus2 / plus2) == 1);
  assert((plus2 - plus2 / succ(1)) == 1);
  assert((plus2 - plus2 / -minus2) == 1);
  assert((plus2 - plus2 / -minus(2)) == 1);
  assert((plus2 - plus2 / ~(-3)) == 1);
  assert((plus2 - plus2 / (5-3)) == 1);
  assert((plus2 - succ(1) / 2) == 1);
  assert((plus2 - succ(1) / plus2) == 1);
  assert((plus2 - succ(1) / succ(1)) == 1);
  assert((plus2 - succ(1) / -minus2) == 1);
  assert((plus2 - succ(1) / -minus(2)) == 1);
  assert((plus2 - succ(1) / ~(-3)) == 1);
  assert((plus2 - succ(1) / (5-3)) == 1);
  assert((plus2 - -minus2 / 2) == 1);
  assert((plus2 - -minus2 / plus2) == 1);
  assert((plus2 - -minus2 / succ(1)) == 1);
  assert((plus2 - -minus2 / -minus2) == 1);
  assert((plus2 - -minus2 / -minus(2)) == 1);
  assert((plus2 - -minus2 / ~(-3)) == 1);
  assert((plus2 - -minus2 / (5-3)) == 1);
  assert((plus2 - -minus(2) / 2) == 1);
  assert((plus2 - -minus(2) / plus2) == 1);
  assert((plus2 - -minus(2) / succ(1)) == 1);
  assert((plus2 - -minus(2) / -minus2) == 1);
  assert((plus2 - -minus(2) / -minus(2)) == 1);
  assert((plus2 - -minus(2) / ~(-3)) == 1);
  assert((plus2 - -minus(2) / (5-3)) == 1);
  assert((plus2 - ~(-3) / 2) == 1);
  assert((plus2 - ~(-3) / plus2) == 1);
  assert((plus2 - ~(-3) / succ(1)) == 1);
  assert((plus2 - ~(-3) / -minus2) == 1);
  assert((plus2 - ~(-3) / -minus(2)) == 1);
  assert((plus2 - ~(-3) / ~(-3)) == 1);
  assert((plus2 - ~(-3) / (5-3)) == 1);
  assert((plus2 - (5-3) / 2) == 1);
  assert((plus2 - (5-3) / plus2) == 1);
  assert((plus2 - (5-3) / succ(1)) == 1);
  assert((plus2 - (5-3) / -minus2) == 1);
  assert((plus2 - (5-3) / -minus(2)) == 1);
  assert((plus2 - (5-3) / ~(-3)) == 1);
  assert((plus2 - (5-3) / (5-3)) == 1);
  assert((succ(1) - 2 / 2) == 1);
  assert((succ(1) - 2 / plus2) == 1);
  assert((succ(1) - 2 / succ(1)) == 1);
  assert((succ(1) - 2 / -minus2) == 1);
  assert((succ(1) - 2 / -minus(2)) == 1);
  assert((succ(1) - 2 / ~(-3)) == 1);
  assert((succ(1) - 2 / (5-3)) == 1);
  assert((succ(1) - plus2 / 2) == 1);
  assert((succ(1) - plus2 / plus2) == 1);
  assert((succ(1) - plus2 / succ(1)) == 1);
  assert((succ(1) - plus2 / -minus2) == 1);
  assert((succ(1) - plus2 / -minus(2)) == 1);
  assert((succ(1) - plus2 / ~(-3)) == 1);
  assert((succ(1) - plus2 / (5-3)) == 1);
  assert((succ(1) - succ(1) / 2) == 1);
  assert((succ(1) - succ(1) / plus2) == 1);
  assert((succ(1) - succ(1) / succ(1)) == 1);
  assert((succ(1) - succ(1) / -minus2) == 1);
  assert((succ(1) - succ(1) / -minus(2)) == 1);
  assert((succ(1) - succ(1) / ~(-3)) == 1);
  assert((succ(1) - succ(1) / (5-3)) == 1);
  assert((succ(1) - -minus2 / 2) == 1);
  assert((succ(1) - -minus2 / plus2) == 1);
  assert((succ(1) - -minus2 / succ(1)) == 1);
  assert((succ(1) - -minus2 / -minus2) == 1);
  assert((succ(1) - -minus2 / -minus(2)) == 1);
  assert((succ(1) - -minus2 / ~(-3)) == 1);
  assert((succ(1) - -minus2 / (5-3)) == 1);
  assert((succ(1) - -minus(2) / 2) == 1);
  assert((succ(1) - -minus(2) / plus2) == 1);
  assert((succ(1) - -minus(2) / succ(1)) == 1);
  assert((succ(1) - -minus(2) / -minus2) == 1);
  assert((succ(1) - -minus(2) / -minus(2)) == 1);
  assert((succ(1) - -minus(2) / ~(-3)) == 1);
  assert((succ(1) - -minus(2) / (5-3)) == 1);
  assert((succ(1) - ~(-3) / 2) == 1);
  assert((succ(1) - ~(-3) / plus2) == 1);
  assert((succ(1) - ~(-3) / succ(1)) == 1);
  assert((succ(1) - ~(-3) / -minus2) == 1);
  assert((succ(1) - ~(-3) / -minus(2)) == 1);
  assert((succ(1) - ~(-3) / ~(-3)) == 1);
  assert((succ(1) - ~(-3) / (5-3)) == 1);
  assert((succ(1) - (5-3) / 2) == 1);
  assert((succ(1) - (5-3) / plus2) == 1);
  assert((succ(1) - (5-3) / succ(1)) == 1);
  assert((succ(1) - (5-3) / -minus2) == 1);
  assert((succ(1) - (5-3) / -minus(2)) == 1);
  assert((succ(1) - (5-3) / ~(-3)) == 1);
  assert((succ(1) - (5-3) / (5-3)) == 1);
  assert((-minus2 - 2 / 2) == 1);
  assert((-minus2 - 2 / plus2) == 1);
  assert((-minus2 - 2 / succ(1)) == 1);
  assert((-minus2 - 2 / -minus2) == 1);
  assert((-minus2 - 2 / -minus(2)) == 1);
  assert((-minus2 - 2 / ~(-3)) == 1);
  assert((-minus2 - 2 / (5-3)) == 1);
  assert((-minus2 - plus2 / 2) == 1);
  assert((-minus2 - plus2 / plus2) == 1);
  assert((-minus2 - plus2 / succ(1)) == 1);
  assert((-minus2 - plus2 / -minus2) == 1);
  assert((-minus2 - plus2 / -minus(2)) == 1);
  assert((-minus2 - plus2 / ~(-3)) == 1);
  assert((-minus2 - plus2 / (5-3)) == 1);
  assert((-minus2 - succ(1) / 2) == 1);
  assert((-minus2 - succ(1) / plus2) == 1);
  assert((-minus2 - succ(1) / succ(1)) == 1);
  assert((-minus2 - succ(1) / -minus2) == 1);
  assert((-minus2 - succ(1) / -minus(2)) == 1);
  assert((-minus2 - succ(1) / ~(-3)) == 1);
  assert((-minus2 - succ(1) / (5-3)) == 1);
  assert((-minus2 - -minus2 / 2) == 1);
  assert((-minus2 - -minus2 / plus2) == 1);
  assert((-minus2 - -minus2 / succ(1)) == 1);
  assert((-minus2 - -minus2 / -minus2) == 1);
  assert((-minus2 - -minus2 / -minus(2)) == 1);
  assert((-minus2 - -minus2 / ~(-3)) == 1);
  assert((-minus2 - -minus2 / (5-3)) == 1);
  assert((-minus2 - -minus(2) / 2) == 1);
  assert((-minus2 - -minus(2) / plus2) == 1);
  assert((-minus2 - -minus(2) / succ(1)) == 1);
  assert((-minus2 - -minus(2) / -minus2) == 1);
  assert((-minus2 - -minus(2) / -minus(2)) == 1);
  assert((-minus2 - -minus(2) / ~(-3)) == 1);
  assert((-minus2 - -minus(2) / (5-3)) == 1);
  assert((-minus2 - ~(-3) / 2) == 1);
  assert((-minus2 - ~(-3) / plus2) == 1);
  assert((-minus2 - ~(-3) / succ(1)) == 1);
  assert((-minus2 - ~(-3) / -minus2) == 1);
  assert((-minus2 - ~(-3) / -minus(2)) == 1);
  assert((-minus2 - ~(-3) / ~(-3)) == 1);
  assert((-minus2 - ~(-3) / (5-3)) == 1);
  assert((-minus2 - (5-3) / 2) == 1);
  assert((-minus2 - (5-3) / plus2) == 1);
  assert((-minus2 - (5-3) / succ(1)) == 1);
  assert((-minus2 - (5-3) / -minus2) == 1);
  assert((-minus2 - (5-3) / -minus(2)) == 1);
  assert((-minus2 - (5-3) / ~(-3)) == 1);
  assert((-minus2 - (5-3) / (5-3)) == 1);
  assert((-minus(2) - 2 / 2) == 1);
  assert((-minus(2) - 2 / plus2) == 1);
  assert((-minus(2) - 2 / succ(1)) == 1);
  assert((-minus(2) - 2 / -minus2) == 1);
  assert((-minus(2) - 2 / -minus(2)) == 1);
  assert((-minus(2) - 2 / ~(-3)) == 1);
  assert((-minus(2) - 2 / (5-3)) == 1);
  assert((-minus(2) - plus2 / 2) == 1);
  assert((-minus(2) - plus2 / plus2) == 1);
  assert((-minus(2) - plus2 / succ(1)) == 1);
  assert((-minus(2) - plus2 / -minus2) == 1);
  assert((-minus(2) - plus2 / -minus(2)) == 1);
  assert((-minus(2) - plus2 / ~(-3)) == 1);
  assert((-minus(2) - plus2 / (5-3)) == 1);
  assert((-minus(2) - succ(1) / 2) == 1);
  assert((-minus(2) - succ(1) / plus2) == 1);
  assert((-minus(2) - succ(1) / succ(1)) == 1);
  assert((-minus(2) - succ(1) / -minus2) == 1);
  assert((-minus(2) - succ(1) / -minus(2)) == 1);
  assert((-minus(2) - succ(1) / ~(-3)) == 1);
  assert((-minus(2) - succ(1) / (5-3)) == 1);
  assert((-minus(2) - -minus2 / 2) == 1);
  assert((-minus(2) - -minus2 / plus2) == 1);
  assert((-minus(2) - -minus2 / succ(1)) == 1);
  assert((-minus(2) - -minus2 / -minus2) == 1);
  assert((-minus(2) - -minus2 / -minus(2)) == 1);
  assert((-minus(2) - -minus2 / ~(-3)) == 1);
  assert((-minus(2) - -minus2 / (5-3)) == 1);
  assert((-minus(2) - -minus(2) / 2) == 1);
  assert((-minus(2) - -minus(2) / plus2) == 1);
  assert((-minus(2) - -minus(2) / succ(1)) == 1);
  assert((-minus(2) - -minus(2) / -minus2) == 1);
  assert((-minus(2) - -minus(2) / -minus(2)) == 1);
  assert((-minus(2) - -minus(2) / ~(-3)) == 1);
  assert((-minus(2) - -minus(2) / (5-3)) == 1);
  assert((-minus(2) - ~(-3) / 2) == 1);
  assert((-minus(2) - ~(-3) / plus2) == 1);
  assert((-minus(2) - ~(-3) / succ(1)) == 1);
  assert((-minus(2) - ~(-3) / -minus2) == 1);
  assert((-minus(2) - ~(-3) / -minus(2)) == 1);
  assert((-minus(2) - ~(-3) / ~(-3)) == 1);
  assert((-minus(2) - ~(-3) / (5-3)) == 1);
  assert((-minus(2) - (5-3) / 2) == 1);
  assert((-minus(2) - (5-3) / plus2) == 1);
  assert((-minus(2) - (5-3) / succ(1)) == 1);
  assert((-minus(2) - (5-3) / -minus2) == 1);
  assert((-minus(2) - (5-3) / -minus(2)) == 1);
  assert((-minus(2) - (5-3) / ~(-3)) == 1);
  assert((-minus(2) - (5-3) / (5-3)) == 1);
  assert((~(-3) - 2 / 2) == 1);
  assert((~(-3) - 2 / plus2) == 1);
  assert((~(-3) - 2 / succ(1)) == 1);
  assert((~(-3) - 2 / -minus2) == 1);
  assert((~(-3) - 2 / -minus(2)) == 1);
  assert((~(-3) - 2 / ~(-3)) == 1);
  assert((~(-3) - 2 / (5-3)) == 1);
  assert((~(-3) - plus2 / 2) == 1);
  assert((~(-3) - plus2 / plus2) == 1);
  assert((~(-3) - plus2 / succ(1)) == 1);
  assert((~(-3) - plus2 / -minus2) == 1);
  assert((~(-3) - plus2 / -minus(2)) == 1);
  assert((~(-3) - plus2 / ~(-3)) == 1);
  assert((~(-3) - plus2 / (5-3)) == 1);
  assert((~(-3) - succ(1) / 2) == 1);
  assert((~(-3) - succ(1) / plus2) == 1);
  assert((~(-3) - succ(1) / succ(1)) == 1);
  assert((~(-3) - succ(1) / -minus2) == 1);
  assert((~(-3) - succ(1) / -minus(2)) == 1);
  assert((~(-3) - succ(1) / ~(-3)) == 1);
  assert((~(-3) - succ(1) / (5-3)) == 1);
  assert((~(-3) - -minus2 / 2) == 1);
  assert((~(-3) - -minus2 / plus2) == 1);
  assert((~(-3) - -minus2 / succ(1)) == 1);
  assert((~(-3) - -minus2 / -minus2) == 1);
  assert((~(-3) - -minus2 / -minus(2)) == 1);
  assert((~(-3) - -minus2 / ~(-3)) == 1);
  assert((~(-3) - -minus2 / (5-3)) == 1);
  assert((~(-3) - -minus(2) / 2) == 1);
  assert((~(-3) - -minus(2) / plus2) == 1);
  assert((~(-3) - -minus(2) / succ(1)) == 1);
  assert((~(-3) - -minus(2) / -minus2) == 1);
  assert((~(-3) - -minus(2) / -minus(2)) == 1);
  assert((~(-3) - -minus(2) / ~(-3)) == 1);
  assert((~(-3) - -minus(2) / (5-3)) == 1);
  assert((~(-3) - ~(-3) / 2) == 1);
  assert((~(-3) - ~(-3) / plus2) == 1);
  assert((~(-3) - ~(-3) / succ(1)) == 1);
  assert((~(-3) - ~(-3) / -minus2) == 1);
  assert((~(-3) - ~(-3) / -minus(2)) == 1);
  assert((~(-3) - ~(-3) / ~(-3)) == 1);
  assert((~(-3) - ~(-3) / (5-3)) == 1);
  assert((~(-3) - (5-3) / 2) == 1);
  assert((~(-3) - (5-3) / plus2) == 1);
  assert((~(-3) - (5-3) / succ(1)) == 1);
  assert((~(-3) - (5-3) / -minus2) == 1);
  assert((~(-3) - (5-3) / -minus(2)) == 1);
  assert((~(-3) - (5-3) / ~(-3)) == 1);
  assert((~(-3) - (5-3) / (5-3)) == 1);
  assert(((5-3) - 2 / 2) == 1);
  assert(((5-3) - 2 / plus2) == 1);
  assert(((5-3) - 2 / succ(1)) == 1);
  assert(((5-3) - 2 / -minus2) == 1);
  assert(((5-3) - 2 / -minus(2)) == 1);
  assert(((5-3) - 2 / ~(-3)) == 1);
  assert(((5-3) - 2 / (5-3)) == 1);
  assert(((5-3) - plus2 / 2) == 1);
  assert(((5-3) - plus2 / plus2) == 1);
  assert(((5-3) - plus2 / succ(1)) == 1);
  assert(((5-3) - plus2 / -minus2) == 1);
  assert(((5-3) - plus2 / -minus(2)) == 1);
  assert(((5-3) - plus2 / ~(-3)) == 1);
  assert(((5-3) - plus2 / (5-3)) == 1);
  assert(((5-3) - succ(1) / 2) == 1);
  assert(((5-3) - succ(1) / plus2) == 1);
  assert(((5-3) - succ(1) / succ(1)) == 1);
  assert(((5-3) - succ(1) / -minus2) == 1);
  assert(((5-3) - succ(1) / -minus(2)) == 1);
  assert(((5-3) - succ(1) / ~(-3)) == 1);
  assert(((5-3) - succ(1) / (5-3)) == 1);
  assert(((5-3) - -minus2 / 2) == 1);
  assert(((5-3) - -minus2 / plus2) == 1);
  assert(((5-3) - -minus2 / succ(1)) == 1);
  assert(((5-3) - -minus2 / -minus2) == 1);
  assert(((5-3) - -minus2 / -minus(2)) == 1);
  assert(((5-3) - -minus2 / ~(-3)) == 1);
  assert(((5-3) - -minus2 / (5-3)) == 1);
  assert(((5-3) - -minus(2) / 2) == 1);
  assert(((5-3) - -minus(2) / plus2) == 1);
  assert(((5-3) - -minus(2) / succ(1)) == 1);
  assert(((5-3) - -minus(2) / -minus2) == 1);
  assert(((5-3) - -minus(2) / -minus(2)) == 1);
  assert(((5-3) - -minus(2) / ~(-3)) == 1);
  assert(((5-3) - -minus(2) / (5-3)) == 1);
  assert(((5-3) - ~(-3) / 2) == 1);
  assert(((5-3) - ~(-3) / plus2) == 1);
  assert(((5-3) - ~(-3) / succ(1)) == 1);
  assert(((5-3) - ~(-3) / -minus2) == 1);
  assert(((5-3) - ~(-3) / -minus(2)) == 1);
  assert(((5-3) - ~(-3) / ~(-3)) == 1);
  assert(((5-3) - ~(-3) / (5-3)) == 1);
  assert(((5-3) - (5-3) / 2) == 1);
  assert(((5-3) - (5-3) / plus2) == 1);
  assert(((5-3) - (5-3) / succ(1)) == 1);
  assert(((5-3) - (5-3) / -minus2) == 1);
  assert(((5-3) - (5-3) / -minus(2)) == 1);
  assert(((5-3) - (5-3) / ~(-3)) == 1);
  assert(((5-3) - (5-3) / (5-3)) == 1);
}

