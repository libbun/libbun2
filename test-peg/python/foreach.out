parsed:
#toplevel {            ## by peg : ( (Stmt^)+  )
   #foreach {            ## by peg : ( 'for' WS+ Symbol^ WS+ 'in' WS+ Expr^ ':' Block^  )
      #name: x   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
      #array {            ## by peg : ( '[' _* (Expr^)? (_* ',' _* Expr^)* _* ']'  )
         #integer: 1   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
         #integer: 2   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
         #integer: 3   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
      }
      #block {            ## by peg : ( (indent WS* Stmt^ EOS?)+  )
         #add {            ## by peg : ( WS* ('+'  / '-' ) WS* Product^ )
            #name: x   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
            #integer: 1   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
         }
      }
   }
}
