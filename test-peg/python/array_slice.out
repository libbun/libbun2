parsed:
#toplevel {            ## by peg : ( (Stmt^)+  )
   #assign {            ## by peg : ( WS* AssignOp WS* OrExpr^ )
      #name: a   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
      #array {            ## by peg : ( '[' _* (Expr^)? (_* ',' _* Expr^)* _* ']'  )
         #integer: 1   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
         #integer: 2   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
         #integer: 3   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
      }
   }
   #assign {            ## by peg : ( WS* AssignOp WS* OrExpr^ )
      #name: b   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
      #index {            ## by peg : ( Selector )
         #name: a   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
         #slice {            ## by peg : ( SliceBegin^ WS* ':'  )
            #sliceBegin {            ## by peg : ( Expr^  )
               #integer: 1   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
            }
         }
      }
   }
   #assign {            ## by peg : ( WS* AssignOp WS* OrExpr^ )
      #name: c   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
      #index {            ## by peg : ( Selector )
         #name: a   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
         #slice {            ## by peg : ( SliceBegin^ WS* ':' WS* SliceEnd^  )
            #sliceBegin {            ## by peg : ( Expr^  )
               #integer: 0   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
            }
            #sliceEnd {            ## by peg : ( Expr^  )
               #integer: 2   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
            }
         }
      }
   }
   #assign {            ## by peg : ( WS* AssignOp WS* OrExpr^ )
      #name: d   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
      #index {            ## by peg : ( Selector )
         #name: a   ## by peg : ( [a-zA-Z_] [a-zA-Z0-9_]*  )
         #slice {            ## by peg : ( ':' SliceEnd^  )
            #sliceEnd {            ## by peg : ( Expr^  )
               #integer: 1   ## by peg : ( ('-' WS* / '+' WS*)? IntegerLiteral  )
            }
         }
      }
   }
}
